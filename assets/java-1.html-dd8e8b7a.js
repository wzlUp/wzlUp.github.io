import{_ as s,p as t,q as r,s as e,R as a,t as p,Y as n,n as l}from"./framework-e1bed10d.js";const o={},c=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"开篇"),e("p",null,"有不少人认为开源就是免费，其实这个观点是错误的，今天就来谈谈关于开源的这些事儿。")],-1),h=n('<h2 id="一、关于开源" tabindex="-1"><a class="header-anchor" href="#一、关于开源" aria-hidden="true">#</a> 一、关于开源</h2><p>开源软件在追求<code>自由</code>的同时，不能牺牲程序员的利益，否则将会影响程序员的创造激情，因此世界上现在有 60 多种被开源促进组织<code>（Open Source Initiative）</code>认可的开源许可协议来保证开源工作者的权益。</p><p>开源协议规定了你在使用开源软件时的权利和责任，也就是规定了你可以做什么，不可以做什么。</p><p>开源协议虽然不一定具备法律效力，但是当涉及软件版权纠纷时，开源协议也是非常重要的证据之一。</p><p>对于准备编写一款开源软件的开发人员，也非常建议先了解一下当前最热门的开源许可协议，选择一个合适的开源许可协议来最大限度保护自己的软件权益。</p><h2 id="二、常见开源协议" tabindex="-1"><a class="header-anchor" href="#二、常见开源协议" aria-hidden="true">#</a> 二、常见开源协议</h2><h3 id="_1-gnu-gpl-gnu-general-public-license-gnu通用公共许可证" tabindex="-1"><a class="header-anchor" href="#_1-gnu-gpl-gnu-general-public-license-gnu通用公共许可证" aria-hidden="true">#</a> 1. <em><strong>GNU GPL（GNU General Public License，GNU通用公共许可证）</strong></em></h3><p><img src="https://pic.smartasc.cn/blogPics/20230208000635.png" alt=""></p><p>只要软件中包含了遵循 GPL 协议的产品或代码，该软件就必须也遵循 GPL 许可协议，也就是必须开源免费，不能闭源收费，因此这个协议并不适合商用软件。</p><p>遵循 GPL 协议的开源软件数量极其庞大，包括 Linux 系统在内的大多数的开源软件都是基于这个协议的。</p><p>GPL 开源协议的主要特点：</p><ul><li><p>复制自由：允许把软件复制到任何人的电脑中，并且不限制复制的数量。</p></li><li><p>传播自由：允许软件以各种形式进行传播。</p></li><li><p>收费传播：允许在各种媒介上出售该软件，但必须提前让买家知道这个软件是可以免费获得的；因此，一般来讲，开源软件都是通过为用户提供有偿服务的形式来盈利的。</p></li><li><p>修改自由：允许开发人员增加或删除软件的功能，但软件修改后必须依然基于GPL许可协议授权。</p></li></ul><h3 id="_2-bsd-berkeley-software-distribution-伯克利软件发布版-协议" tabindex="-1"><a class="header-anchor" href="#_2-bsd-berkeley-software-distribution-伯克利软件发布版-协议" aria-hidden="true">#</a> 2. <em><strong>BSD（Berkeley Software Distribution，伯克利软件发布版）协议</strong></em></h3><p><img src="https://pic.smartasc.cn/blogPics/20230208000824.png" alt=""></p><p>BSD 协议基本上允许用户<code>为所欲为</code>，用户可以使用、修改和重新发布遵循该许可的软件，并且可以将软件作为商业软件发布和销售，前提是需要满足下面三个条件：</p><ul><li><p>如果再发布的软件中包含源代码，则源代码必须继续遵循 BSD 许可协议。</p></li><li><p>如果再发布的软件中只有二进制程序，则需要在相关文档或版权文件中声明原始代码遵循了 BSD 协议。</p></li><li><p>不允许用原始软件的名字、作者名字或机构名称进行市场推广。</p></li></ul><p>BSD 对商业比较友好，很多公司在选用开源产品的时候都首选 BSD 协议，因为可以完全控制这些第三方的代码，甚至在必要的时候可以修改或者二次开发。</p><h3 id="_3-apache-许可证版本-apache-license-version-协议" tabindex="-1"><a class="header-anchor" href="#_3-apache-许可证版本-apache-license-version-协议" aria-hidden="true">#</a> 3. <em><strong>Apache 许可证版本（Apache License Version）协议</strong></em></h3><p><img src="https://pic.smartasc.cn/blogPics/20230208000915.png" alt=""></p><p>Apache 和 BSD 类似，都适用于商业软件。Apache 协议在为开发人员提供版权及专利许可的同时，允许用户拥有修改代码及再发布的自由。</p><p>现在热门的 Hadoop、Apache HTTP Server、MongoDB 等项目都是基于该许可协议研发的，程序开发人员在开发遵循该协议的软件时，要严格遵守下面的四个条件：</p><ul><li><p>该软件及其衍生品必须继续使用 Apache 许可协议。</p></li><li><p>如果修改了程序源代码，需要在文档中进行声明。</p></li><li><p>若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。</p></li><li><p>如果再发布的软件中有声明文件，则需在此文件中标注 Apache 许可协议及其他许可协议。</p></li></ul><h3 id="_4-mit-massachusetts-institute-of-technology-协议" tabindex="-1"><a class="header-anchor" href="#_4-mit-massachusetts-institute-of-technology-协议" aria-hidden="true">#</a> 4. <em><strong>MIT（Massachusetts Institute of Technology）协议</strong></em></h3><p>目前限制最少的开源许可协议之一（比 BSD 和 Apache 的限制都少），只要程序的开发者在修改后的源代码中保留原作者的许可信息即可，因此普遍被商业软件所使用。</p><p>使用 MIT 协议的软件有 PuTTY、X Window System、Ruby on Rails、Lua 5.0 onwards、Mono 等。</p><h3 id="_5-gun-lgpl-gnu-lesser-general-public-license-gnu-宽通用公共许可证" tabindex="-1"><a class="header-anchor" href="#_5-gun-lgpl-gnu-lesser-general-public-license-gnu-宽通用公共许可证" aria-hidden="true">#</a> 5. <em><strong>GUN LGPL（GNU Lesser General Public License，GNU 宽通用公共许可证）</strong></em></h3><p>LGPL 是 GPL 的一个衍生版本，也被称为 GPL V2，该协议主要是为类库设计的开源协议。</p><p>LGPL 允许商业软件通过类库引用（link）的方式使用 LGPL 类库，而不需要开源商业软件的代码。这使得采用 LGPL 协议的开源代码可以被商业软件作为类库引用并发布和销售。</p><p>但是如果修改 LGPL 协议的代码或者衍生品，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用 LGPL 协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以 LGPL 协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p><h2 id="三、如何选择开源协议" tabindex="-1"><a class="header-anchor" href="#三、如何选择开源协议" aria-hidden="true">#</a> 三、如何选择开源协议</h2><p>世界上的开源协议有上百种，很少有人能彻底搞清它们之间的区别，即使在最流行的六种开源协议——GPL、BSD、MIT、Mozilla、Apache 和 LGPL——之中做选择，也很复杂。</p><p>乌克兰程序员 Paul Bagwell 画了一张分析图，说明应该怎么选择开源协议，大家看了一目了然，真是清爽。</p><p><img src="https://pic.smartasc.cn/blogPics/20230208000243.png" alt=""></p>',33),d=e("code",null,"图片来自于阮一峰博客:",-1),u={href:"http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html",target:"_blank",rel:"noopener noreferrer"},g=n('<h2 id="四、开源等于免费吗" tabindex="-1"><a class="header-anchor" href="#四、开源等于免费吗" aria-hidden="true">#</a> 四、开源等于免费吗？</h2><p>首先，开源软件和免费软件是两个概念：</p><ul><li><p>开源软件是指公开源代码的软件。开源软件在发行的时候会附上软件的源代码，并授权允许用户更改、传播或者二次开发。</p></li><li><p>免费软件就是免费提供给用户使用的软件。但是在免费的同时，通常也会有一些限制，比如源代码不公开，用户不能随意修改、不能二次发布等。</p></li></ul><p>免费软件的例子比比皆是，QQ、微信、迅雷、酷狗、360 等都是免费软件，你可以随意使用，尽情蹂躏；但是，如果你嫌弃它们复杂，自己删除了一些无用的功能，然后在网上发布了一个精简版本供大家下载，那么你就离法院的传票不远了。</p><p>开源软件是不抵触商业的，开源的目的也不是做慈善事业，而是通过更多人的参与，减少软件的缺陷，丰富软件的功能，同时也避免了少数人在软件里留一些不正当的后门。开源软件最终还会反哺商业，让商业公司为用户提供更好的产品。</p><p>Android 就是大众最熟知的一款开源操作系统，它除了用在手机上，还用在汽车、平板电脑、电视、智能手表等其它硬件平台，小米、华为、OPPO、三星等都是 Android 的受益者，他们都赚得盆满钵满。</p><p>很多著名的开源项目背后都有商业公司支撑，它们的开发者也都有正式的工作，享受和我们一样的社会福利；如果一个成功的开源项目背后没有商业公司，这反而是不健康的，社会需要开源和商业之间的互补来促进技术的革新。</p><p><strong>免责声明</strong>：本文来源网络，版权归原作者所有。如涉及作品版权问题，请与我联系删除。</p>',8);function _(m,L){const i=l("ExternalLinkIcon");return t(),r("div",null,[c,h,e("p",null,[d,a(),e("a",u,[a("如何选择开源协议"),p(i)])]),g])}const b=s(o,[["render",_],["__file","java-1.html.vue"]]);export{b as default};
